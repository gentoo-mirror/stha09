diff --git a/third_party/skia/include/effects/SkImageFilters.h b/third_party/skia/include/effects/SkImageFilters.h
index f85ef0e..21b6c56 100644
--- a/third_party/skia/include/effects/SkImageFilters.h
+++ b/third_party/skia/include/effects/SkImageFilters.h
@@ -23,6 +23,9 @@ class SkColorFilter;
 class SkPaint;
 class SkRegion;
 
+constexpr SkRect kNoCropRect = {SK_ScalarNegativeInfinity, SK_ScalarNegativeInfinity,
+                                SK_ScalarInfinity, SK_ScalarInfinity};
+
 // A set of factory functions providing useful SkImageFilter effects. For image filters that take an
 // input filter, providing nullptr means it will automatically use the dynamic source image. This
 // source depends on how the filter is applied, but is either the contents of a saved layer when
@@ -33,8 +36,6 @@ public:
     // to those types as a crop rect for the image filter factories. It's not intended to be used
     // directly.
     struct CropRect {
-        static constexpr SkRect kNoCropRect = {SK_ScalarNegativeInfinity, SK_ScalarNegativeInfinity,
-                                               SK_ScalarInfinity, SK_ScalarInfinity};
         CropRect() : fCropRect(kNoCropRect) {}
         // Intentionally not explicit so callers don't have to use this type but can use SkIRect or
         // SkRect as desired.
diff --git a/third_party/skia/src/effects/imagefilters/SkImageFilters.cpp b/third_party/skia/src/effects/imagefilters/SkImageFilters.cpp
index 0274573..660531e 100644
--- a/third_party/skia/src/effects/imagefilters/SkImageFilters.cpp
+++ b/third_party/skia/src/effects/imagefilters/SkImageFilters.cpp
@@ -32,10 +32,6 @@
 // filter can be moved out of core
 #include "src/core/SkMatrixImageFilter.h"
 
-// Allow kNoCropRect to be referenced (for certain builds, e.g. macOS libFuzzer chromium target,
-// see crbug.com/1139725)
-constexpr SkRect SkImageFilters::CropRect::kNoCropRect;
-
 void SkImageFilters::RegisterFlattenables() {
     SkAlphaThresholdFilter::RegisterFlattenables();
     SkArithmeticImageFilter::RegisterFlattenables();
