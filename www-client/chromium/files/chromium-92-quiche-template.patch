From dff392b9af6ed34dbd3925b4f92975d0781eade2 Mon Sep 17 00:00:00 2001
From: Stephan Hartmann <stha09@googlemail.com>
Date: Fri, 7 May 2021 11:31:47 +0000
Subject: [PATCH] GCC: fix duplicate explicit template instantiation

QpackEncoderDynamicTable and QpackDecoderDynamicTable are an
alias for the same type. Explicit template instantation for
QpackHeaderTableBase is duplicated and GCC doesn't allow that.
Define common alias QpackDynamicTable and use it for explicit
template instantiation instead.
---
 .../src/quic/core/qpack/qpack_header_table.cc | 32 ++++---------------
 .../src/quic/core/qpack/qpack_header_table.h  |  6 ++--
 2 files changed, 11 insertions(+), 27 deletions(-)

diff --git a/net/third_party/quiche/src/quic/core/qpack/qpack_header_table.cc b/net/third_party/quiche/src/quic/core/qpack/qpack_header_table.cc
index e39babf..d4a34b9 100644
--- a/net/third_party/quiche/src/quic/core/qpack/qpack_header_table.cc
+++ b/net/third_party/quiche/src/quic/core/qpack/qpack_header_table.cc
@@ -12,41 +12,23 @@ namespace quic {
 
 // Explicitly instantiate all possible templated non-inline base class methods.
 
-template QpackHeaderTableBase<QpackEncoderDynamicTable>::QpackHeaderTableBase();
+template QpackHeaderTableBase<QpackDynamicTable>::QpackHeaderTableBase();
 template bool
-QpackHeaderTableBase<QpackEncoderDynamicTable>::EntryFitsDynamicTableCapacity(
+QpackHeaderTableBase<QpackDynamicTable>::EntryFitsDynamicTableCapacity(
     absl::string_view name,
     absl::string_view value) const;
-template uint64_t QpackHeaderTableBase<QpackEncoderDynamicTable>::InsertEntry(
+template uint64_t QpackHeaderTableBase<QpackDynamicTable>::InsertEntry(
     absl::string_view name,
     absl::string_view value);
 template bool QpackHeaderTableBase<
-    QpackEncoderDynamicTable>::SetDynamicTableCapacity(uint64_t capacity);
+    QpackDynamicTable>::SetDynamicTableCapacity(uint64_t capacity);
 template bool
-QpackHeaderTableBase<QpackEncoderDynamicTable>::SetMaximumDynamicTableCapacity(
+QpackHeaderTableBase<QpackDynamicTable>::SetMaximumDynamicTableCapacity(
     uint64_t maximum_dynamic_table_capacity);
 template void
-QpackHeaderTableBase<QpackEncoderDynamicTable>::RemoveEntryFromEnd();
+QpackHeaderTableBase<QpackDynamicTable>::RemoveEntryFromEnd();
 template void QpackHeaderTableBase<
-    QpackEncoderDynamicTable>::EvictDownToCapacity(uint64_t capacity);
-
-template QpackHeaderTableBase<QpackDecoderDynamicTable>::QpackHeaderTableBase();
-template bool
-QpackHeaderTableBase<QpackDecoderDynamicTable>::EntryFitsDynamicTableCapacity(
-    absl::string_view name,
-    absl::string_view value) const;
-template uint64_t QpackHeaderTableBase<QpackDecoderDynamicTable>::InsertEntry(
-    absl::string_view name,
-    absl::string_view value);
-template bool QpackHeaderTableBase<
-    QpackDecoderDynamicTable>::SetDynamicTableCapacity(uint64_t capacity);
-template bool
-QpackHeaderTableBase<QpackDecoderDynamicTable>::SetMaximumDynamicTableCapacity(
-    uint64_t maximum_dynamic_table_capacity);
-template void
-QpackHeaderTableBase<QpackDecoderDynamicTable>::RemoveEntryFromEnd();
-template void QpackHeaderTableBase<
-    QpackDecoderDynamicTable>::EvictDownToCapacity(uint64_t capacity);
+    QpackDynamicTable>::EvictDownToCapacity(uint64_t capacity);
 
 template <typename DynamicEntryTable>
 QpackHeaderTableBase<DynamicEntryTable>::QpackHeaderTableBase()
diff --git a/net/third_party/quiche/src/quic/core/qpack/qpack_header_table.h b/net/third_party/quiche/src/quic/core/qpack/qpack_header_table.h
index ce4375d..36d60e4 100644
--- a/net/third_party/quiche/src/quic/core/qpack/qpack_header_table.h
+++ b/net/third_party/quiche/src/quic/core/qpack/qpack_header_table.h
@@ -21,13 +21,15 @@ using QpackEntry = spdy::HpackEntry;
 using QpackLookupEntry = spdy::HpackLookupEntry;
 constexpr size_t kQpackEntrySizeOverhead = spdy::kHpackEntrySizeOverhead;
 
+using QpackDynamicTable = spdy::HpackHeaderTable::DynamicEntryTable;
+
 // Encoder needs pointer stability for |dynamic_index_| and
 // |dynamic_name_index_|.  However, it does not need random access.
-using QpackEncoderDynamicTable = spdy::HpackHeaderTable::DynamicEntryTable;
+using QpackEncoderDynamicTable = QpackDynamicTable;
 
 // Decoder needs random access for LookupEntry().
 // However, it does not need pointer stability.
-using QpackDecoderDynamicTable = spdy::HpackHeaderTable::DynamicEntryTable;
+using QpackDecoderDynamicTable = QpackDynamicTable;
 
 // This is a base class for encoder and decoder classes that manage the QPACK
 // static and dynamic tables.  For dynamic entries, it only has a concept of
-- 
2.26.3

