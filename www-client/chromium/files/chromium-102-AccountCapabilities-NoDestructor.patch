From e352c7cc04d8277659eada8c08b6c86ddc3547fc Mon Sep 17 00:00:00 2001
From: Stephan Hartmann <stha09@googlemail.com>
Date: Wed, 23 Mar 2022 09:39:32 +0000
Subject: [PATCH] GCC: use all brace-initializers for NoDestructor
 initialization

AccountCapabilities kCapabilityNames initialization usage of
NoDestructor fails to compile in GCC because it is ambiguous in GCC.
To avoid ambiguity we can just use braces to initialize also
NoDestructor.
---
 .../signin/public/identity_manager/account_capabilities.cc    | 4 ++--
 1 file changed, 2 insertions(+), 2 deletions(-)

diff --git a/components/signin/public/identity_manager/account_capabilities.cc b/components/signin/public/identity_manager/account_capabilities.cc
index 3ee661a..9a224df 100644
--- a/components/signin/public/identity_manager/account_capabilities.cc
+++ b/components/signin/public/identity_manager/account_capabilities.cc
@@ -32,11 +32,11 @@ AccountCapabilities& AccountCapabilities::operator=(
 // static
 const std::vector<std::string>&
 AccountCapabilities::GetSupportedAccountCapabilityNames() {
-  static base::NoDestructor<std::vector<std::string>> kCapabilityNames({
+  static base::NoDestructor<std::vector<std::string>> kCapabilityNames{{
 #define ACCOUNT_CAPABILITY(cpp_label, java_label, value) cpp_label,
 #include "components/signin/internal/identity_manager/account_capabilities_list.h"
 #undef ACCOUNT_CAPABILITY
-  });
+  }};
   return *kCapabilityNames;
 }
 
-- 
2.34.1

