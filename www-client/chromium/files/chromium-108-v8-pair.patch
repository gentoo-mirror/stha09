From aedb3d45f708a6756d062f0c6b7e04d84f6a51d6 Mon Sep 17 00:00:00 2001
From: Stephan Hartmann <stha09@googlemail.com>
Date: Thu, 29 Sep 2022 17:24:44 +0000
Subject: [PATCH] GCC: workaround std::pair not trivially copyable

There is a frontend bug in GCC 12.2 in C++20 mode that makes
std::pair not trivially copyable. Detect at compile time
and fall back to std::vector if needed.
---
 v8/src/maglev/maglev-code-generator.cc | 9 +++++++--
 1 file changed, 7 insertions(+), 2 deletions(-)

diff --git a/v8/src/maglev/maglev-code-generator.cc b/v8/src/maglev/maglev-code-generator.cc
index 572863f..cb5e3dd 100644
--- a/v8/src/maglev/maglev-code-generator.cc
+++ b/v8/src/maglev/maglev-code-generator.cc
@@ -463,8 +463,13 @@ class ExceptionHandlerTrampolineBuilder {
  private:
   MaglevAssembler* const masm_;
   using Move = std::pair<const ValueLocation&, ValueNode*>;
-  base::SmallVector<Move, 16> direct_moves_;
-  base::SmallVector<Move, 16> materialisation_moves_;
+  // GCC 12 has a frontend bug that makes std::pair not trivially copyable
+  template <typename T, size_t N>
+  using VectorType =
+      typename std::conditional<std::is_trivially_copyable<Move>::value,
+                                base::SmallVector<T, N>, std::vector<T>>::type;
+  VectorType<Move, 16> direct_moves_;
+  VectorType<Move, 16> materialisation_moves_;
   bool save_accumulator_ = false;
 
   MacroAssembler* masm() const { return masm_; }
-- 
2.35.1

