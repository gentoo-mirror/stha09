From 05c0d2687ba5afae42df0e9ae6919233195e399e Mon Sep 17 00:00:00 2001
From: root <root@example.org>
Date: Sat, 18 Jun 2022 11:59:57 +0000
Subject: [PATCH] libstdc++: fix incomplete type of vk::FramebufferHelper

std::pair<T1, T2> requires full definition of T2 with libstdc++. Use
std::reference_wrapper to allow incomplete type.

---
 .../angle/src/libANGLE/renderer/vulkan/vk_cache_utils.cpp     | 4 ++--
 .../angle/src/libANGLE/renderer/vulkan/vk_cache_utils.h       | 2 +-
 2 files changed, 3 insertions(+), 3 deletions(-)

diff --git a/third_party/angle/src/libANGLE/renderer/vulkan/vk_cache_utils.cpp b/third_party/angle/src/libANGLE/renderer/vulkan/vk_cache_utils.cpp
index e0eeeb3..8b47596 100644
--- a/third_party/angle/src/libANGLE/renderer/vulkan/vk_cache_utils.cpp
+++ b/third_party/angle/src/libANGLE/renderer/vulkan/vk_cache_utils.cpp
@@ -5379,7 +5379,7 @@ bool FramebufferCache::get(ContextVk *contextVk,
     auto iter = mPayload.find(desc);
     if (iter != mPayload.end())
     {
-        framebuffer.setHandle(iter->second.getFramebuffer().getHandle());
+        framebuffer.setHandle(iter->second.get().getFramebuffer().getHandle());
         mCacheStats.hit();
         return true;
     }
@@ -5391,7 +5391,7 @@ bool FramebufferCache::get(ContextVk *contextVk,
 void FramebufferCache::insert(const vk::FramebufferDesc &desc,
                               vk::FramebufferHelper &&framebufferHelper)
 {
-    mPayload.emplace(desc, std::move(framebufferHelper));
+    mPayload.emplace(desc, framebufferHelper);
 }
 
 void FramebufferCache::erase(ContextVk *contextVk, const vk::FramebufferDesc &desc)
diff --git a/third_party/angle/src/libANGLE/renderer/vulkan/vk_cache_utils.h b/third_party/angle/src/libANGLE/renderer/vulkan/vk_cache_utils.h
index 56d8e98..55ab8cf 100644
--- a/third_party/angle/src/libANGLE/renderer/vulkan/vk_cache_utils.h
+++ b/third_party/angle/src/libANGLE/renderer/vulkan/vk_cache_utils.h
@@ -1784,7 +1784,7 @@ class FramebufferCache final : angle::NonCopyable
     bool empty() const { return mPayload.empty(); }
 
   private:
-    angle::HashMap<vk::FramebufferDesc, vk::FramebufferHelper> mPayload;
+    angle::HashMap<vk::FramebufferDesc, std::reference_wrapper<vk::FramebufferHelper>> mPayload;
     CacheStats mCacheStats;
 };
 
-- 
2.35.1

