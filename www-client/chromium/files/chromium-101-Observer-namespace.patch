From 1ac8a95a10cd908f00864db0a22dfae0b687e160 Mon Sep 17 00:00:00 2001
From: Stephan Hartmann <stha09@googlemail.com>
Date: Tue, 15 Mar 2022 13:21:40 +0000
Subject: [PATCH] GCC: fix ambiguous reference to Observer

GCC sees two defintions:
1. class feed::XsurfaceDatastoreDataReader::Observer
   feed::XsurfaceDatastoreDataReader::Observer::Observer
2. class feed::XsurfaceDatastoreDataReader::Observer

Use explicit namespace to avoid confusion.
---
 components/feed/core/v2/xsurface_datastore.cc | 16 ++++++++++------
 components/feed/core/v2/xsurface_datastore.h  | 10 +++++-----
 2 files changed, 15 insertions(+), 11 deletions(-)

diff --git a/components/feed/core/v2/xsurface_datastore.cc b/components/feed/core/v2/xsurface_datastore.cc
index 60df155..fe55ec1 100644
--- a/components/feed/core/v2/xsurface_datastore.cc
+++ b/components/feed/core/v2/xsurface_datastore.cc
@@ -42,11 +42,13 @@ std::map<std::string, std::string> XsurfaceDatastoreSlice::GetAllEntries()
   return entries_;
 }
 
-void XsurfaceDatastoreSlice::AddObserver(Observer* o) {
+void XsurfaceDatastoreSlice::AddObserver(
+    XsurfaceDatastoreDataReader::Observer* o) {
   observers_.AddObserver(o);
 }
 
-void XsurfaceDatastoreSlice::RemoveObserver(Observer* o) {
+void XsurfaceDatastoreSlice::RemoveObserver(
+    XsurfaceDatastoreDataReader::Observer* o) {
   observers_.RemoveObserver(o);
 }
 
@@ -63,11 +65,13 @@ XsurfaceDatastoreAggregate::~XsurfaceDatastoreAggregate() {
     s->RemoveObserver(this);
   }
 }
-void XsurfaceDatastoreAggregate::AddObserver(Observer* o) {
+void XsurfaceDatastoreAggregate::AddObserver(
+    XsurfaceDatastoreDataReader::Observer* o) {
   observers_.AddObserver(o);
 }
 
-void XsurfaceDatastoreAggregate::RemoveObserver(Observer* o) {
+void XsurfaceDatastoreAggregate::RemoveObserver(
+    XsurfaceDatastoreDataReader::Observer* o) {
   observers_.RemoveObserver(o);
 }
 
@@ -86,7 +90,7 @@ const std::string* XsurfaceDatastoreAggregate::FindEntry(
 void XsurfaceDatastoreAggregate::DatastoreEntryUpdated(
     XsurfaceDatastoreDataReader* source,
     const std::string& key) {
-  for (Observer& o : observers_) {
+  for (XsurfaceDatastoreDataReader::Observer& o : observers_) {
     o.DatastoreEntryUpdated(this, key);
   }
 }
@@ -94,7 +98,7 @@ void XsurfaceDatastoreAggregate::DatastoreEntryUpdated(
 void XsurfaceDatastoreAggregate::DatastoreEntryRemoved(
     XsurfaceDatastoreDataReader* source,
     const std::string& key) {
-  for (Observer& o : observers_) {
+  for (XsurfaceDatastoreDataReader::Observer& o : observers_) {
     o.DatastoreEntryRemoved(this, key);
   }
 }
diff --git a/components/feed/core/v2/xsurface_datastore.h b/components/feed/core/v2/xsurface_datastore.h
index 8b3f1c8..7a079ad 100644
--- a/components/feed/core/v2/xsurface_datastore.h
+++ b/components/feed/core/v2/xsurface_datastore.h
@@ -41,8 +41,8 @@ class XsurfaceDatastoreDataReader {
 
   // Begin observing. Data already present before `AddObserver()` is called can
   // be read using `GetAllEntries()`.
-  virtual void AddObserver(Observer* o) = 0;
-  virtual void RemoveObserver(Observer* o) = 0;
+  virtual void AddObserver(XsurfaceDatastoreDataReader::Observer* o) = 0;
+  virtual void RemoveObserver(XsurfaceDatastoreDataReader::Observer* o) = 0;
   // Find an entry with the given key. Returns nullptr if the entry does not
   // exist.
   virtual const std::string* FindEntry(const std::string& key) const = 0;
@@ -91,8 +91,8 @@ class XsurfaceDatastoreAggregate
       delete;
 
   // XsurfaceDatastoreDataReader.
-  void AddObserver(Observer* o) override;
-  void RemoveObserver(Observer* o) override;
+  void AddObserver(XsurfaceDatastoreDataReader::Observer* o) override;
+  void RemoveObserver(XsurfaceDatastoreDataReader::Observer* o) override;
   const std::string* FindEntry(const std::string& key) const override;
   std::map<std::string, std::string> GetAllEntries() const override;
 
@@ -103,7 +103,7 @@ class XsurfaceDatastoreAggregate
                              const std::string& key) override;
 
  private:
-  base::ObserverList<Observer> observers_;
+  base::ObserverList<XsurfaceDatastoreDataReader::Observer> observers_;
   std::vector<raw_ptr<XsurfaceDatastoreDataReader>> sources_;
 };
 
-- 
2.34.1

